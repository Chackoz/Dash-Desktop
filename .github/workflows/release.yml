name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
      SKIP_PREFLIGHT_CHECK: true
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libjavascriptcoregtk-4.1-dev libsoup-3.0-dev
          sudo apt-get install -y webkit2gtk-4.0-dev build-essential curl wget file libssl-dev libgtk-3-dev
          sudo apt-get install -y libayatana-appindicator3-dev
          sudo apt-get install -y libxdo-dev
          
      - name: Install dependencies (mac only)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install gtk+3 librsvg

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install frontend dependencies
        run: |
          npm install
          npm install -D @tauri-apps/cli

      - name: Create Next.js config
        run: |
          echo 'const nextConfig = {
            output: "export",
            images: { unoptimized: true },
            experimental: { appDir: true }
          };
          module.exports = nextConfig;' > next.config.js

      - name: Build Next.js
        run: npm run build
        env:
          CI: true
          NODE_ENV: production

      - name: Generate Simple Release Notes
        id: release_notes
        shell: bash
        run: |
          # Get the version tag
          VERSION="${{ github.ref_name }}"
          
          # Generate simple release notes
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "# Release ${VERSION}" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "## What's Changed" >> $GITHUB_ENV
          git log --pretty=format:"* %s" $(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || git rev-list --max-parents=0 HEAD)..HEAD >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Dash Desktop ${{ github.ref_name }}'
          releaseBody: ${{ env.RELEASE_NOTES }}
          releaseDraft: false
          prerelease: false